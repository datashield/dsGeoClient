% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/ds.overMatch.R
\name{ds.overMatch}
\alias{ds.overMatch}
\title{Function to compliment \code{ds.over()} function}
\usage{
ds.overMatch(x = NULL, x_id = NULL, over_out = NULL, y_id = NULL,
  newobj = NULL, datasources = NULL)
}
\arguments{
\item{x}{spatial object that was previously used as geometry (locations) of
the queries when using \code{ds.over()}}

\item{x_id}{the name of the attribute of interest on x}

\item{over_out}{output from previous use of \code{ds.over()} where x was queried}

\item{y_id}{the name of the attribute of interest on y that was used previously
in \code{ds.over()}}

\item{newobj}{a character, the name of the new object which will be created
If no name is specified the default name is the name of the original data frame
followed by the suffix '.overM'.}

\item{datasources}{a list of opal object(s) obtained after login in to opal servers;
these objects hold also the data assign to R, as \code{dataframe}, from opal datasources.}
}
\value{
a vector indicating a positive match
}
\description{
This function is used in conjunction with the \code{over()} function.
When the two sets of objects that have been overlaid and those objects share a common
feature, validate that where there is an overlay, the attribute matches. Return a
vector indicating where a match is seen.
}
\details{


The details are best explained through an example. If we have a group of
individuals with many points representing their journeys, we can attribute their
ID to each point and group their points in this way as SpatialPointsDataFrames.
We also have another set of polygons, one for each individual, marked with their
ID. When we run the \code{ds.over()} function with the points and polygons, this
will return all overlays of points and polygons (as a list of dataframes). We might
only be interested when an individual's points fall inside the polygon marked with
their own ID and not the ID of others. In this case this function will return
a vector indicating which of an individual's points fell inside their polygon.
}
\examples{
{

# Load log in data

data(GEOSPATIAL_logindata)

# login
# (by default the assigned dataset is a dataframe named 'D')
opals <- datashield.login(logins=GEOSPATIAL_logindata,assign=TRUE)

# set up additional objects needed for the example

datashield.assign(opals, symbol="work", value="GEOSPATIAL.GPS_work")
datashield.assign(opals, symbol="home", value="GEOSPATIAL.GPS_home")

# Convert points data to a SpatialPointsDataFrame

ds.coordinates('D',coords=c('Lon','Lat'),newobj='journeys')
ds.coordinates('work',coords=c('Lon','Lat'),newobj='work')
ds.coordinates('home',coords=c('Lon','Lat'),newobj='home')

#set up coordinate systems

ds.proj4string('journeys',4326,'journeys')
ds.proj4string('work',4326,'work')
ds.proj4string('home',4326,'home')

ds.spTransform('journeys',29902,'journeys')
ds.spTransform('work',29902,'work')
ds.spTransform('home',29902,'home')

#Create buffer around point locations

ds.gBuffer('work',by_id=TRUE,ip_width=150,'work_buffer')
ds.gBuffer('home',by_id=TRUE,ip_width=150,'home_buffer')

# Overlay the locations with the journeys with the home and work locations.
# We then use the overMatch function to only count matches when the ID of the
# location and journey are the same so that we only consider when individuals
# making the journey are at their own home or work and not any one else's

ds.over('journeys', 'home_buffer',returnList=TRUE,newobj='home_over')
ds.overMatch('journeys','person_id','home_over','person_id',newobj='res_home')

ds.over('journeys', 'work_buffer',returnList=TRUE,newobj='work_over')
ds.overMatch('journeys','person_id','work_over','person_id',newobj='res_work')




# Return a vector indicating that an individual's journey passed through the
# polygon that was assigned to them (e.g. they came within a certain distance)
# of a point

# set up overlay
ds.over(x='my_journeys',y='my_polygons',returnList=TRUE, newobj='res')

# Analyse overlay to see if individual ids match polygon ids to give a positive
# match

ds.overMatch(x='my_journeys',x_id='ids',over_out='res',y_id='ids', newobj='matches')
}
}
\author{
Bishop, T.
}

